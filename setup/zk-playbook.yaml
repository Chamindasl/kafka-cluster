---
- hosts: all
  become: true
  tasks:
    - name: Password ssh
      replace:
        path:  /etc/ssh/sshd_config
        regexp: 'PasswordAuthentication no'
        replace: 'PasswordAuthentication yes'
        backup: yes

    - name: Restart ssh
      service:
        name: ssh
        daemon_reload: yes
        state: restarted

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add an apt signing key for Confluent
      apt_key:
        url: https://packages.confluent.io/deb/6.1/archive.key
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://packages.confluent.io/deb/6.1 stable main
        state: present

    - name: Install java 8 and confluent-community
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - openjdk-8-jdk
          - confluent-community-2.13

    - name: Add all nodes to hosts file
      lineinfile:
        dest: /etc/hosts
        line: '192.168.50.{{ item }}0 {{ VM_NAME }}{{ item }}'
      with_sequence: start=1 end={{ nodes }} stride=1

    - name: Comment localhost entry otherwise port binging would be a problem
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '(^127\.\d\.\d\.\d)(\s*{{ VM_NAME }}{{ node_id }}.*)'
        line: '#\1\2'
        backrefs: yes


    - name: Ensure group "confluent" exists
      ansible.builtin.group:
        name: confluent
        state: present

    - name: Add the user 'cp-kafka'
      ansible.builtin.user:
        name: cp-kafka
        group: confluent

    - name: Remove content of zookeeper.properties
      file:
        path: /etc/kafka/zookeeper.properties
        state: absent

    - name: Create zookeeper.properties
      file:
        path: /etc/kafka/zookeeper.properties
        state: touch
        mode: '1777'

    - name: Add static content for zookeeper.properties
      lineinfile:
        dest: /etc/kafka/zookeeper.properties
        line: '{{ item }}'
      with_items:
        - 'tickTime=2000'
        - 'dataDir=/var/lib/zookeeper/'
        - 'clientPort=2181'
        - 'initLimit=5'
        - 'syncLimit=2'
        - 'autopurge.snapRetainCount=3'
        - 'autopurge.purgeInterval=24'

    - name: Add dynamic content for zookeeper.properties
      lineinfile:
        dest: /etc/kafka/zookeeper.properties
        line: 'server.{{ item }}={{ VM_NAME }}{{ item }}:2888:3888'
      with_sequence: start=1 end={{ nodes }} stride=1

    - name: Ensures zookeeper/ dir exists
      file:
        path: /var/lib/zookeeper/
        state: directory
        mode: '0777'

    - name: Ensures var/log/kafka dir exists
      file:
        path: /var/log/kafka/
        state: directory
        mode: '0777'

    - name: Ensures var/lib/kafka dir exists
      file:
        path: /var/lib/kafka/
        state: directory
        mode: '0777'


    - name: Set Zookeeper ID
      copy:
        dest: /var/lib/zookeeper/myid
        content: |
          {{ node_id }}
        mode: '1777'

    - name: Set Kafka server
      replace:
        path: /etc/kafka/server.properties
        regexp: "{{ item.regexp1 }}"
        replace: "{{ item.replace }}"
      with_items:
        - { regexp1: 'broker.id=0', replace: 'broker.id={{ node_id }}'}
        - { regexp1: '#advertised.listeners=PLAINTEXT://your.host.name:9092', replace: 'advertised.listeners=PLAINTEXT://{{ VM_NAME }}{{ node_id }}:9092' }
        - { regexp1: 'zookeeper.connect=localhost:2181', replace: 'zookeeper.connect={{ VM_NAME }}1:2181' }

    - name: Restart confluent-zookeeper
      service:
        name: confluent-zookeeper
        daemon_reload: yes
        state: restarted
        enabled: yes

    - name: Sleep for 10 seconds before restart kafka
      wait_for:
        timeout: 10
      delegate_to: localhost

    - name: Restart confluent-kafka
      service:
        name: confluent-kafka
        daemon_reload: yes
        state: restarted
        enabled: yes

  handlers:
    - name: confluent-zookeeper status
      service: name=confluent-zookeeper state=started
    - name: confluent-kafka status
      service: name=confluent-kafka state=started
